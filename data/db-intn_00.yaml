- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Distributed database systems are an integral part of most businesses and the
    vast majority of software applications. These applications provide logic and a
    user interface, while database systems take care of data integrity, consistency,
    and redundancy.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式数据库系统是大多数企业和绝大多数软件应用的重要组成部分。这些应用程序提供逻辑和用户界面，而数据库系统则负责数据的完整性、一致性和冗余性。
- en: Back in 2000, if you were to choose a database, you would have just a few options,
    and most of them would be within the realm of relational databases, so differences
    between them would be relatively small. Of course, this does not mean that all
    databases were completely the same, but their functionality and use cases were
    very similar.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 早在2000年，如果您选择数据库，您只有几个选择，而且大部分都在关系型数据库的领域内，因此它们之间的差异相对较小。当然，这并不意味着所有数据库完全相同，但它们的功能和用例非常相似。
- en: 'Some of these databases have focused on *horizontal scaling* (scaling *out*)—improving
    performance and increasing capacity by running multiple database instances acting
    as a single logical unit: Gamma Database Machine Project, Teradata, Greenplum,
    Parallel DB2, and many others. Today, horizontal scaling remains one of the most
    important properties that customers expect from databases. This can be explained
    by the rising popularity of cloud-based services. It is often easier to spin up
    a new instance and add it to the cluster than scaling vertically (scaling *up*)
    by moving the database to a larger, more powerful machine. Migrations can be long
    and painful, potentially incurring downtime.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一些这些数据库专注于*水平扩展*（*外扩*）——通过运行多个数据库实例作为单个逻辑单元来提高性能和增加容量：Gamma数据库机器项目、Teradata、Greenplum、Parallel
    DB2等等。如今，水平扩展仍然是客户期望数据库具备的最重要特性之一。这可以解释为何云服务的流行正在上升。通常情况下，通过启动新实例并将其添加到集群中比通过将数据库移至更大更强大的机器进行垂直扩展（*上扩*）更容易。迁移可能会漫长且痛苦，可能会导致停机时间。
- en: Around 2010, a new class of *eventually consistent* databases started appearing,
    and terms such as *NoSQL*, and later, *big data* grew in popularity. Over the
    last 15 years, the open source community, large internet companies, and database
    vendors have created so many databases and tools that it’s easy to get lost trying
    to understand use cases, details, and specifics.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 大约在2010年左右，一类新型的*最终一致性*数据库开始出现，并且诸如*NoSQL*以及后来的*大数据*这样的术语变得越来越流行。在过去的15年里，开源社区、大型互联网公司和数据库供应商创造了许多数据库和工具，因此很容易在尝试理解使用情况、细节和具体细节时感到困惑。
- en: The Dynamo paper [[DECANDIA07]](app01.html#DECANDIA07), published by the team
    at Amazon in 2007, had so much impact on the database community that within a
    short period it inspired many variants and implementations. The most prominent
    of them were Apache Cassandra, created at Facebook; Project Voldemort, created
    at LinkedIn; and Riak, created by former Akamai engineers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 2007年由亚马逊团队发布的Dynamo论文[[DECANDIA07]](app01.html#DECANDIA07)对数据库社区产生了巨大影响，短时间内激发了许多变体和实现。其中最突出的是由Facebook创建的Apache
    Cassandra，由LinkedIn创建的Project Voldemort以及由前Akamai工程师创建的Riak。
- en: 'Today, the field is changing again: after the time of key-value stores, NoSQL,
    and eventual consistency, we have started seeing more scalable and performant
    databases, able to execute complex queries with stronger consistency guarantees.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，领域再次发生变化：在键值存储、NoSQL和最终一致性时代之后，我们开始看到更具可伸缩性和性能的数据库，能够执行具有更强一致性保证的复杂查询。
- en: Audience of This Book
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的受众
- en: 'In conversations at technical conferences, I often hear the same question:
    “How can I learn more about database internals? I don’t even know where to start.”
    Most of the books on database systems do not go into details of storage engine
    implementation, and cover the access methods, such as B-Trees, on a rather high
    level. There are very few books that cover more recent concepts, such as different
    B-Tree variants and log-structured storage, so I usually recommend reading papers.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术会议上的对话中，我经常听到同样的问题：“我该如何更多地了解数据库内部？我甚至不知道从哪里开始。”大多数关于数据库系统的书籍并不深入讨论存储引擎的实现细节，也没有涵盖如B-树等访问方法的具体细节。有很少的书籍涵盖了更近期的概念，如不同的B-树变体和日志结构化存储，因此我通常建议阅读论文。
- en: 'Everyone who reads papers knows that it’s not that easy: you often lack context,
    the wording might be ambiguous, there’s little or no connection between papers,
    and they’re hard to find. This book contains concise summaries of important database
    systems concepts and can serve as a guide for those who’d like to dig in deeper,
    or as a cheat sheet for those already familiar with these concepts.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个读过论文的人都知道，这并不容易：你经常缺乏上下文，措辞可能含糊不清，论文之间很少或没有联系，而且它们很难找到。这本书包含了重要数据库系统概念的简明总结，可以作为那些想要深入了解的人的指南，或者作为已经熟悉这些概念的人的备忘单。
- en: 'Not everyone wants to become a database developer, but this book will help
    people who build software that uses database systems: software developers, reliability
    engineers, architects, and engineering managers.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 并非每个人都想成为数据库开发人员，但这本书将帮助那些构建使用数据库系统的软件的人：软件开发人员、可靠性工程师、架构师和工程经理。
- en: If your company depends on any infrastructure component, be it a database, a
    messaging queue, a container platform, or a task scheduler, you have to read the
    project change-logs and mailing lists to stay in touch with the community and
    be up-to-date with the most recent happenings in the project. Understanding terminology
    and knowing what’s inside will enable you to yield more information from these
    sources and use your tools more productively to troubleshoot, identify, and avoid
    potential risks and bottlenecks. Having an overview and a general understanding
    of how database systems work will help in case something goes wrong. Using this
    knowledge, you’ll be able to form a hypothesis, validate it, find the root cause,
    and present it to other project maintainers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的公司依赖于任何基础设施组件，无论是数据库、消息队列、容器平台还是任务调度器，你必须阅读项目的变更日志和邮件列表，以保持与社区的联系并了解项目中最新的动态。理解术语并知道内部情况将使你能够从这些来源中获取更多信息，并更有效地使用你的工具来排除故障、识别和避免潜在风险和瓶颈。了解数据库系统工作原理的概述和一般理解将有助于在出现问题时采取行动。利用这些知识，你将能够提出假设，验证假设，找到根本原因，并向其他项目维护者提出。
- en: 'This book is also for curious minds: for the people who like learning things
    without immediate necessity, those who spend their free time hacking on something
    fun, creating compilers, writing homegrown operating systems, text editors, computer
    games, learning programming languages, and absorbing new information.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书也适合那些充满好奇心的人：对于那些喜欢在没有即时需求的情况下学习东西的人，那些把空闲时间用于有趣的事情的人，例如编写编译器、编写自制操作系统、文本编辑器、电脑游戏、学习编程语言和吸收新信息的人。
- en: The reader is assumed to have some experience with developing backend systems
    and working with database systems as a *user*. Having some prior knowledge of
    different data structures will help to digest material faster.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 假设读者有一些开发后端系统和使用数据库系统作为*用户*的经验。具有一些不同数据结构的先前知识将有助于更快地消化材料。
- en: Why Should I Read This Book?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么要阅读这本书？
- en: 'We often hear people describing database systems in terms of the concepts and
    algorithms they implement: “This database uses gossip for membership propagation”
    (see [Chapter 12](ch12.html#anti_entropy)), “They have implemented Dynamo,” or
    “This is just like what they’ve described in the Spanner paper” (see [Chapter 13](ch13.html#database_transactions)).
    Or, if you’re discussing the algorithms and data structures, you can hear something
    like “ZAB and Raft have a lot in common” (see [Chapter 14](ch14.html#consensus)),
    “Bw-Trees are like the B-Trees implemented on top of log structured storage” (see
    [Chapter 6](ch06.html#b_trees_ch)), or “They are using sibling pointers like in
    B^(link)-Trees” (see [Chapter 5](ch05.html#transaction_processing)).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常听到人们用实现的概念和算法来描述数据库系统：“这个数据库使用八卦进行成员传播”（参见[第12章](ch12.html#anti_entropy)），“他们实现了Dynamo”，或者“这就像他们在Spanner论文中描述的那样”（参见[第13章](ch13.html#database_transactions)）。或者，如果你讨论算法和数据结构，你可能会听到类似“ZAB和Raft有很多相似之处”（参见[第14章](ch14.html#consensus)），“Bw-Trees类似于在日志结构化存储上实现的B-Trees”（参见[第6章](ch06.html#b_trees_ch)），或者“他们像B^(link)-Trees中描述的那样使用兄弟指针”（参见[第5章](ch05.html#transaction_processing)）。
- en: We need abstractions to discuss complex concepts, and we can’t have a discussion
    about terminology every time we start a conversation. Having shortcuts in the
    form of common language helps us to move our attention to other, higher-level
    problems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要抽象化来讨论复杂的概念，我们不能每次开始对话时都讨论术语。以常见语言的形式进行快捷方式有助于我们将注意力转移到其他更高级别的问题上。
- en: One of the advantages of learning the fundamental concepts, proofs, and algorithms
    is that they never grow old. Of course, there will always be new ones, but new
    algorithms are often created after finding a flaw or room for improvement in a
    classical one. Knowing the history helps to understand differences and motivation
    better.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 学习基本概念、证明和算法的优势之一是它们永远不会过时。当然，总会有新的算法出现，但经典算法往往是在发现缺陷或改进空间之后创建的。了解历史有助于更好地理解差异和动机。
- en: 'Learning about these things is inspiring. You see the variety of algorithms,
    see how our industry was solving one problem after the other, and get to appreciate
    that work. At the same time, learning is rewarding: you can almost feel how multiple
    puzzle pieces move together in your mind to form a full picture that you will
    always be able to share with others.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 学习这些东西是启发性的。你看到各种算法的多样性，看到我们行业如何一次又一次地解决问题，并且开始欣赏那些工作。同时，学习是有回报的：你几乎可以感受到脑海中多个拼图片段如何组合在一起形成一个完整的图景，这个图景你将永远能与他人分享。
- en: Scope of This Book
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的范围
- en: This is neither a book about relational database management systems nor about
    NoSQL ones, but about the algorithms and concepts used in all kinds of database
    systems, with a focus on a *storage engine* and the components responsible for
    *distribution*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书既不是关于关系数据库管理系统，也不是关于NoSQL系统的书，而是关于各种数据库系统中使用的算法和概念，重点是*存储引擎*和负责*分布*的组件。
- en: Some concepts, such as query planning, query optimization, scheduling, the relational
    model, and a few others, are already covered in several great textbooks on database
    systems. Some of these concepts are usually described from the user’s perspective,
    but this book concentrates on the internals. You can find some pointers to useful
    literature in the [Part II Conclusion](afterword02.html#part-2-conclusion) and
    in the chapter summaries. In these books you’re likely to find answers to many
    database-related questions you might have.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一些概念，如查询规划、查询优化、调度、关系模型等，已经在几本关于数据库系统的优秀教材中有所涵盖。这些概念通常从用户的角度描述，但本书侧重于内部结构。你可以在[第二部分结论](afterword02.html#part-2-conclusion)和章节总结中找到一些有用的文献指引。在这些书籍中，你可能会找到关于数据库相关问题的答案。
- en: Query languages aren’t discussed, since there’s no single common language among
    the database systems mentioned in this book.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不讨论查询语言，因为在本书提到的数据库系统中没有单一的共同语言。
- en: 'To collect material for this book, I studied over 15 books, more than 300 papers,
    countless blog posts, source code, and the documentation for several open source
    databases. The rule of thumb for whether or not to include a particular concept
    in the book was the question: “Do the people in the database industry and research
    circles talk about this concept?” If the answer was “yes,” I added the concept
    to the long list of things to discuss.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了收集本书的材料，我研究了超过15本书籍，300多篇论文，无数篇博客文章，源代码以及几个开源数据库的文档。是否将某个特定概念包含在本书中的经验法则是这样一个问题：“数据库行业和研究界的人们是否谈论这个概念？”
    如果答案是“是”，我就将该概念添加到要讨论的长列表中。
- en: Structure of This Book
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的结构
- en: There are some examples of extensible databases with pluggable components (such
    as [[SCHWARZ86]](app01.html#SCHWARZ86)), but they are rather rare. At the same
    time, there are plenty of examples where databases use pluggable storage. Similarly,
    we rarely hear database vendors talking about query execution, while they are
    very eager to discuss the ways their databases preserve consistency.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些具有可扩展组件（如[[SCHWARZ86]](app01.html#SCHWARZ86)）的可扩展数据库示例，但它们相当罕见。与此同时，有很多例子显示数据库使用可插拔存储。同样，我们很少听到数据库供应商讨论查询执行，而他们却非常热衷于讨论他们的数据库如何保持一致性。
- en: 'The most significant distinctions between database systems are concentrated
    around two aspects: how they *store* and how they *distribute* the data. (Other
    subsystems can at times also be of importance, but are not covered here.) The
    book is arranged into parts that discuss the subsystems and components responsible
    for *storage* (Part I) and *distribution* (Part II).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库系统之间最显著的区别集中在两个方面：它们如何*存储*和*分布*数据。 （其他子系统有时也可能很重要，但这里没有涵盖。）本书分为几个部分，讨论负责*存储*（第一部分）和*分布*（第二部分）的子系统和组件。
- en: '**Part I** discusses node-local processes and focuses on the storage engine,
    the central component of the database system and one of the most significant distinctive
    factors. First, we start with the architecture of a database management system
    and present several ways to classify database systems based on the primary storage
    medium and layout.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一部分** 讨论了节点本地过程，重点放在存储引擎上，这是数据库系统的核心组件，也是最显著的区分因素之一。首先，我们从数据库管理系统的架构开始，介绍了几种基于主存储介质和布局的数据库系统分类方式。'
- en: We continue with storage structures and try to understand how disk-based structures
    are different from in-memory ones, introduce B-Trees, and cover algorithms for
    efficiently maintaining B-Tree structures on disk, including serialization, page
    layout, and on-disk representations. Later, we discuss multiple variants to illustrate
    the power of this concept and the diversity of data structures influenced and
    inspired by B-Trees.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续讨论存储结构，并试图了解磁盘结构与内存结构的不同之处，介绍了B树，并涵盖了在磁盘上高效维护B树结构的算法，包括序列化、页面布局和磁盘表示。随后，我们讨论了多种变体，以展示这一概念的威力和由B树受到影响和启发的数据结构的多样性。
- en: Last, we discuss several variants of log-structured storage, commonly used for
    implementing file and storage systems, motivation, and reasons to use them.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们讨论了几种日志结构化存储的变体，通常用于实现文件和存储系统，动机以及使用它们的原因。
- en: '**Part II** is about how to organize multiple nodes into a database cluster.
    We start with the importance of understanding the theoretical concepts for building
    fault-tolerant distributed systems, how distributed systems are different from
    single-node applications, and which problems, constraints, and complications we
    face in a distributed environment.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二部分** 讨论了如何将多个节点组织成数据库集群。我们从理解构建容错分布式系统的理论概念的重要性开始，分布式系统与单节点应用程序的不同之处，以及在分布式环境中面临的问题、约束和复杂性。'
- en: After that, we dive deep into distributed algorithms. Here, we start with algorithms
    for failure detection, helping to improve performance and stability by noticing
    and reporting failures and avoiding the failed nodes. Since many algorithms discussed
    later in the book rely on understanding the concept of leadership, we introduce
    several algorithms for leader election and discuss their suitability.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，我们深入研究了分布式算法。在这里，我们从故障检测算法开始，通过注意并报告故障以及避免失败节点来帮助改善性能和稳定性。由于后面讨论的许多算法依赖于理解领导概念，我们介绍了几种领导选举算法，并讨论了它们的适用性。
- en: As one of the most difficult things in distributed systems is achieving data
    consistency, we discuss concepts of replication, followed by consistency models,
    possible divergence between replicas, and eventual consistency. Since eventually
    consistent systems sometimes rely on anti-entropy for convergence and gossip for
    data dissemination, we discuss several anti-entropy and gossip approaches. Finally,
    we discuss logical consistency in the context of database transactions, and finish
    with consensus algorithms.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式系统中最困难的问题之一是实现数据一致性，我们讨论复制的概念，接着是一致性模型，副本之间可能出现的差异以及最终一致性。由于最终一致性系统有时依赖于反熵以实现收敛和基于猜测的数据传播，我们讨论了几种反熵和猜测方法。最后，我们在数据库事务的背景下讨论逻辑一致性，并以共识算法结束。
- en: It would’ve been impossible to write this book without all the research and
    publications. You will find many references to papers and publications in the
    text, in square brackets with monospace font; for example, [[DECANDIA07]](app01.html#DECANDIA07).
    You can use these references to learn more about related concepts in more detail.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 没有所有研究和出版物的支持，这本书将是不可能完成的。您将在文本中找到许多参考文献和出版物的引用，用方括号和等宽字体表示；例如，[[DECANDIA07]](app01.html#DECANDIA07)。您可以使用这些引用来更详细地了解相关概念。
- en: After each chapter, you will find a summary section that contains material for
    further study, related to the content of the chapter.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 每章结束后，您将找到一个摘要部分，其中包含进一步学习内容，与章节内容相关。
- en: Conventions Used in This Book
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书中使用的惯例
- en: 'The following typographical conventions are used in this book:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的排版惯例：
- en: '*Italic*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 指示新术语、网址、电子邮件地址、文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`等宽字体`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及段落内引用程序元素，如变量或函数名、数据库、数据类型、环境变量、语句和关键字。
- en: Tip
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: This element signifies a tip or suggestion.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般注释。
- en: Warning
  id: totrans-45
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示警告或注意事项。
- en: Using Code Examples
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing a CD-ROM
    of examples from O’Reilly books does require permission. Answering a question
    by citing this book and quoting example code does not require permission. Incorporating
    a significant amount of example code from this book into your product’s documentation
    does require permission.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助您完成工作。一般情况下，如果本书提供示例代码，则您可以在您的程序和文档中使用它。除非您复制了代码的大部分，否则您无需联系我们以获得许可。例如，编写一个使用本书多个代码片段的程序不需要许可。销售或分发包含O’Reilly图书示例的CD-ROM需要许可。引用本书并引用示例代码回答问题不需要许可。将本书大量示例代码整合到产品文档中需要许可。
- en: 'We appreciate, but do not require, attribution. An attribution usually includes
    the title, author, publisher, and ISBN. For example: “*Database Internals* by
    Alex Petrov (O’Reilly). Copyright 2019 Oleksandr Petrov, 978-1-492-04034-7.”'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您的使用，但不要求署名。署名通常包括书名、作者、出版社和ISBN。例如：“*Database Internals* by Alex Petrov
    (O’Reilly)。版权所有2019 Oleksandr Petrov，978-1-492-04034-7。”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为您使用的代码示例超出了合理使用范围或上述授权，请随时通过[*permissions@oreilly.com*](mailto:permissions@oreilly.com)与我们联系。
- en: O’Reilly Online Learning
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: O’Reilly在线学习
- en: Note
  id: totrans-52
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For almost 40 years, [*O’Reilly Media*](http://oreilly.com) has provided technology
    and business training, knowledge, and insight to help companies succeed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 近40年来，[*O’Reilly Media*](http://oreilly.com) 提供技术和商业培训、知识和洞察力，帮助公司取得成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, please visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章和我们的在线学习平台分享他们的知识和专长。O’Reilly的在线学习平台为您提供按需访问的实时培训课程、深入的学习路径、交互式编码环境，以及来自O’Reilly和200多家出版商的大量文本和视频。有关更多信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: How to Contact Us
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关本书的评论和问题发送至出版商：
- en: O’Reilly Media, Inc.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gravenstein Highway North 1005
- en: Sebastopol, CA 95472
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加利福尼亚州塞巴斯托波尔95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938 (在美国或加拿大)
- en: 707-829-0515 (international or local)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515 (国际或本地)
- en: 707-829-0104 (fax)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104 (传真)
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*http://bit.ly/database-internals*](http://bit.ly/database-internals).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为本书创建了一个网页，列出勘误、示例和任何其他信息。您可以访问[*http://bit.ly/database-internals*](http://bit.ly/database-internals)查看该页面。
- en: To comment or ask technical questions about this book, please send an email
    to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要就本书发表评论或提出技术问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)。
- en: For news and more information about our books and courses, see our website at
    [*http://www.oreilly.com*](http://www.oreilly.com).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关我们的图书和课程的新闻和更多信息，请访问我们的网站[*http://www.oreilly.com*](http://www.oreilly.com)。
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在Facebook上找到我们：[*http://facebook.com/oreilly*](http://facebook.com/oreilly)
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注我们：[*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上关注我们：[*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)
- en: Acknowledgments
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 致谢
- en: This book wouldn’t have been possible without the hundreds of people who have
    worked hard on research papers and books, which have been a source of ideas, inspiration,
    and served as references for this book.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的问世离不开数百名努力研究论文和书籍的人们，他们为这本书提供了思想、灵感，并作为参考文献。
- en: 'I’d like to say thank you to all the people who reviewed manuscripts and provided
    feedback, making sure that the material in this book is correct and the wording
    is precise: Dmitry Alimov, Peter Alvaro, Carlos Baquero, Jason Brown, Blake Eggleston,
    Marcus Eriksson, Francisco Fernández Castaño, Heidi Howard, Vaidehi Joshi, Maximilian
    Karasz, Stas Kelvich, Michael Klishin, Predrag Knežević, Joel Knighton, Eugene
    Lazin, Nate McCall, Christopher Meiklejohn, Tyler Neely, Maxim Neverov, Marina
    Petrova, Stefan Podkowinski, Edward Ribeiro, Denis Rystsov, Kir Shatrov, Alex
    Sorokoumov, Massimiliano Tomassi, and Ariel Weisberg.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我要感谢所有审阅手稿并提供反馈的人，确保本书的内容准确无误，措辞精确：Dmitry Alimov，Peter Alvaro，Carlos Baquero，Jason
    Brown，Blake Eggleston，Marcus Eriksson，Francisco Fernández Castaño，Heidi Howard，Vaidehi
    Joshi，Maximilian Karasz，Stas Kelvich，Michael Klishin，Predrag Knežević，Joel Knighton，Eugene
    Lazin，Nate McCall，Christopher Meiklejohn，Tyler Neely，Maxim Neverov，Marina Petrova，Stefan
    Podkowinski，Edward Ribeiro，Denis Rystsov，Kir Shatrov，Alex Sorokoumov，Massimiliano
    Tomassi和Ariel Weisberg。
- en: 'Of course, this book wouldn’t have been possible without support from my family:
    my wife Marina and my daughter Alexandra, who have supported me on every step
    on the way.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这本书离不开我的家人的支持：我的妻子Marina和女儿Alexandra，在我每一个步骤上都给予了我支持。
