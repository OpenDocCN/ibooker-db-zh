- en: Chapter 21\. Setting Up MongoDB in Production
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第21章。在生产环境中设置MongoDB
- en: 'In [Chapter 2](ch02.xhtml#chapter-2), we covered the basics of starting MongoDB.
    This chapter will go into more detail about which options are important for setting
    up MongoDB in production, including:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第二章](ch02.xhtml#chapter-2)中，我们讨论了启动MongoDB的基础知识。本章将更详细地介绍在生产环境中设置MongoDB时重要的选项，包括：
- en: Commonly used options
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常用选项
- en: Starting up and shutting down MongoDB
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动和关闭MongoDB
- en: Security-related options
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与安全相关的选项
- en: Logging considerations
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志考虑
- en: Starting from the Command Line
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从命令行启动
- en: 'The MongoDB server is started with the `mongod` executable. `mongod` has many
    configurable startup options; to view all of them, run `mongod --help` from the
    command line. A couple of the options are widely used and important to be aware
    of:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB服务器使用`mongod`可执行文件启动。`mongod`有许多可配置的启动选项；要查看所有选项，请从命令行运行`mongod --help`。其中一些选项被广泛使用且非常重要：
- en: '`--dbpath`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`--dbpath`'
- en: 'Specify an alternate directory to use as the data directory; the default is
    */data/db/* (or, on Windows, *\data\db\* on the MongoDB binary’s volume). Each
    `mongod` process on a machine needs its own data directory, so if you are running
    three instances of `mongod` on one machine, you’ll need three separate data directories.
    When `mongod` starts up, it creates a *mongod.lock* file in its data directory,
    which prevents any other `mongod` process from using that directory. If you attempt
    to start another MongoDB server using the same data directory, it will give an
    error:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 指定替代数据目录使用；默认为*/data/db/*（或者在Windows上，在MongoDB二进制卷上的*\data\db\*）。每个`mongod`进程在机器上需要自己的数据目录，所以如果您在一台机器上运行三个`mongod`实例，则需要三个单独的数据目录。当`mongod`启动时，它会在其数据目录中创建一个*mongod.lock*文件，这会阻止其他任何`mongod`进程使用该目录。如果您尝试使用相同的数据目录启动另一个MongoDB服务器，它将报错：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`--port`'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`--port`'
- en: 'Specify the port number for the server to listen on. By default, `mongod` uses
    port 27017, which is unlikely to be used by another process (besides other `mongod`
    processes). If you would like to run more than one `mongod` process on a single
    machine, you’ll need to specify different ports for each one. If you try to start
    `mongod` on a port that is already being used, it will give an error:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 指定服务器侦听的端口号。默认情况下，`mongod`使用端口27017，这个端口除了其他`mongod`进程外，不太可能被其他进程使用。如果您希望在单台机器上运行多个`mongod`进程，则需要为每个进程指定不同的端口号。如果您尝试在已被使用的端口上启动`mongod`，它将报错：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`--fork`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`--fork`'
- en: On Unix-based systems, fork the server process, running MongoDB as a daemon.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于Unix的系统上，分叉服务器进程，将MongoDB作为守护程序运行。
- en: If you are starting up *mongod* for the first time (with an empty data directory),
    it can take the filesystem a few minutes to allocate database files. The parent
    process will not return from forking until the preallocation is done and *mongod*
    is ready to start accepting connections. Thus, *fork* may appear to hang. You
    can tail the log to see what it is doing. You must use `--logpath` if you specify
    `--fork`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您首次启动*mongod*（使用空数据目录），文件系统可能需要几分钟来分配数据库文件。父进程在分叉直到预分配完成并且*mongod*准备好开始接受连接之前不会返回。因此，*fork*可能会看起来像是挂起。您可以tail日志查看它在做什么。如果指定了`--fork`，必须使用`--logpath`。
- en: '`--logpath`'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`--logpath`'
- en: Send all output to the specified file rather than outputting on the command
    line. This will create the file if it does not exist, assuming you have write
    permissions to the directory. It will also overwrite the log file if it already
    exists, erasing any older log entries. If you’d like to keep old logs around,
    use the `--logappend` option in addition to `--logpath` (highly recommended).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有输出发送到指定的文件而不是在命令行上输出。如果目录有写权限，这将创建文件（如果不存在）。如果日志文件已存在，它将覆盖日志文件，擦除任何较旧的日志条目。如果您想保留旧日志，请使用`--logappend`选项，还要使用`--logpath`（强烈推荐）。
- en: '`--directoryperdb`'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`--directoryperdb`'
- en: Put each database in its own directory. This allows you to mount different databases
    on different disks, if necessary or desired. Common uses for this are putting
    a local database on its own disk (replication) or moving a database to a different
    disk if the original one fills up. You could also put databases that handle more
    load on faster disks and databases with a lower load on slower disks. This basically
    gives you more flexibility to move things around later.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 把每个数据库放在它自己的目录中。这样，如果需要或希望的话，可以把不同的数据库挂载到不同的磁盘上。常见的用法包括把本地数据库放在自己的磁盘上（复制）或者在原始磁盘填满时将数据库移到不同的磁盘上。您还可以将负载更高的数据库放在更快的磁盘上，将负载较低的数据库放在较慢的磁盘上。基本上，这使您在以后移动这些内容时具有更大的灵活性。
- en: '`--config`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`--config`'
- en: Use a configuration file for additional options not specified on the command
    line. This is typically used to make sure options are the same between restarts.
    See [“File-Based Configuration”](#sect2_d1e8618) for details.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用配置文件添加未在命令行上指定的其他选项。通常用于确保在重新启动之间选项保持不变。有关详细信息，请参阅[“基于文件的配置”](#sect2_d1e8618)。
- en: 'For example, to start the server as a daemon listening on port 5586 and sending
    all output to *mongodb.log*, we could run this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要将服务器作为守护进程启动，并监听端口5586，并将所有输出发送到*mongodb.log*，我们可以运行以下命令：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When you first install and start MongoDB, it is a good idea to look at the log.
    This might be an easy thing to miss, especially if MongoDB is being started from
    an init script, but the log often contains important warnings that prevent later
    errors from occurring. If you don’t see any warnings in the MongoDB log on startup,
    then you are all set. (Startup warnings will also appear on shell startup.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当您首次安装并启动MongoDB时，建议查看日志。这可能是一个容易忽略的事情，特别是如果MongoDB是从init脚本启动的，但日志通常包含防止后续错误发生的重要警告。如果在MongoDB启动时的日志中没有看到任何警告，则一切正常。（启动警告也会出现在shell启动时。）
- en: 'If there are any warnings in the startup banner, take note of them. MongoDB
    will warn you about a variety of issues: that you’re running on a 32-bit machine
    (which MongoDB is not designed for), that you have NUMA enabled (which can slow
    your application to a crawl), or that your system does not allow enough open file
    descriptors (MongoDB uses a lot of file descriptors).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启动横幅中有任何警告，请注意。MongoDB会警告您有各种问题：您正在运行在32位机器上（MongoDB不适用于此），您已启用NUMA（这可能使您的应用程序速度变慢），或者您的系统不允许足够的打开文件描述符（MongoDB使用大量文件描述符）。
- en: The log preamble won’t change when you restart the database, so feel free to
    run MongoDB from an init script and ignore the logs, once you know what they say.
    However, it’s a good idea to check again each time you do an install, upgrade,
    or recover from a crash, just to make sure MongoDB and your system are on the
    same page.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当您重新启动数据库时，日志前言不会改变，所以一旦您了解它们的含义，可以从init脚本运行MongoDB并忽略日志。但是，每次安装、升级或从崩溃中恢复时，最好再次检查，以确保MongoDB和您的系统处于同一页面。
- en: 'When you start the database, MongoDB will write a document to the *local.startup_log*
    collection that describes the version of MongoDB, underlying system, and flags
    used. We can look at this document using the *mongo* shell:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动数据库时，MongoDB将向*local.startup_log*集合写入一个描述MongoDB版本、底层系统和使用的标志的文档。我们可以使用*mongo*
    shell查看此文档：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This collection can be useful for tracking upgrades and changes in behavior.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这一集合对于跟踪升级和行为变化非常有用。
- en: File-Based Configuration
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于文件的配置
- en: MongoDB supports reading configuration information from a file. This can be
    useful if you have a large set of options you want to use or are automating the
    task of starting up MongoDB. To tell the server to get options from a configuration
    file, use the `-f` or `--config` flags. For example, run `mongod --config ~/.mongodb.conf`
    to use *~/.mongodb.conf* as a configuration file.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB支持从文件中读取配置信息。如果您有一组要使用的选项或正在自动化启动MongoDB的任务，则此选项非常有用。要告诉服务器从配置文件获取选项，请使用`-f`或`--config`标志。例如，运行`mongod
    --config ~/.mongodb.conf`以使用*~/.mongodb.conf*作为配置文件。
- en: 'The options supported in a configuration file are the same as those accepted
    at the command line. However, the format is different. As of MongoDB 2.6, MongoDB
    configuration files use the YAML format. Here’s an example configuration file:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中支持的选项与命令行接受的选项相同。但是，格式不同。从MongoDB 2.6开始，MongoDB配置文件使用YAML格式。以下是一个示例配置文件：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This configuration file specifies the same options we used earlier when starting
    with regular command-line arguments. Note that these same options are reflected
    in the *startup_log* collection document we looked at in the previous section.
    The only real difference is that the options are specified using JSON rather than
    YAML.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置文件指定了我们在使用常规命令行参数启动时使用的相同选项。请注意，这些选项在我们在前一节中查看的 *startup_log* 集合文档中也有所反映。唯一的真正区别是这些选项是使用
    JSON 而不是 YAML 指定的。
- en: In MongoDB 4.2, expansion directives were added to allow the loading of specific
    configuration file options or loading of the entire configuration file. The advantage
    of expansion directives is that confidential information, such as passwords and
    security certificates, does not have to be stored in the config file directly.
    The `--configExpand` command-line option enables this feature and must include
    the expansion directives you wish to enable. `__rest` and `__exec` are the current
    implementation of the expansion directives in MongoDB. The `__rest` expansion
    directive loads specific configuration file values or loads the entire configuration
    file from a REST endpoint. The `__exec` expansion directive loads specific configuration
    file values or loads the entire configuration file from a shell or terminal command.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MongoDB 4.2 中，添加了扩展指令，允许加载特定配置文件选项或加载整个配置文件。扩展指令的优点是不必直接在配置文件中存储机密信息，例如密码和安全证书。`--configExpand`
    命令行选项启用此功能，并必须包括您希望启用的扩展指令。`__rest` 和 `__exec` 是 MongoDB 中扩展指令的当前实现。`__rest` 扩展指令从
    REST 端点加载特定配置文件值或加载整个配置文件。`__exec` 扩展指令从 shell 或终端命令加载特定配置文件值或加载整个配置文件。
- en: Stopping MongoDB
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止 MongoDB
- en: Being able to safely stop a running MongoDB server is at least as important
    as being able to start one. There are a couple of different options for doing
    this effectively.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 安全地停止运行中的 MongoDB 服务器至少与启动一个同样重要。有几种有效的方法可以实现这一点。
- en: 'The cleanest way to shut down a running server is to use the `shutdown` command,
    `{"shutdown" : 1}`. This is an admin command and must be run on the *admin* database.
    The shell features a helper function to make this easier:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '关闭运行中服务器的最干净方式是使用 `shutdown` 命令，`{"shutdown" : 1}`。这是一个管理员命令，必须在 *admin* 数据库上运行。Shell
    提供了一个帮助函数来简化此操作：'
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When run on a primary, the `shutdown` command steps down the primary and waits
    for a secondary to catch up before shutting down the server. This minimizes the
    chance of rollback, but the shutdown isn’t guaranteed to succeed. If there is
    no secondary available that can catch up within a few seconds, the `shutdown`
    command will fail and the (former) primary will not shut down:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在主服务器上运行时，`shutdown` 命令会降级主服务器并等待辅助服务器追赶上来，然后再关闭服务器。这最大程度地减少了回滚的机会，但不能保证关闭一定成功。如果没有可以在几秒钟内追赶上来的辅助服务器，`shutdown`
    命令将失败，原（主）服务器将不会关闭：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can force the `shutdown` command to shut down a primary by using the `force`
    option:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `force` 选项强制执行 `shutdown` 命令以关闭主服务器：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This is equivalent to sending a SIGINT or SIGTERM signal (all three of these
    options result in a clean shutdown, but there may be unreplicated data). If the
    server is running as the foreground process in a terminal, a SIGINT can be sent
    by pressing Ctrl-C. Otherwise, a command like `kill` can be used to send the signal.
    If *mongod* had 10014 as its PID, the command would be `kill -2 10014` (SIGINT)
    or `kill 10014` (SIGTERM).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于发送 SIGINT 或 SIGTERM 信号（这三个选项都会导致干净的关闭，但可能存在未复制的数据）。如果服务器作为终端中的前台进程运行，可以通过按
    Ctrl-C 发送 SIGINT。否则，可以使用像 `kill` 这样的命令来发送信号。如果 *mongod* 的 PID 是 10014，则命令为 `kill
    -2 10014`（SIGINT）或 `kill 10014`（SIGTERM）。
- en: When *mongod* receives a SIGINT or SIGTERM, it will do a clean shutdown. This
    means it will wait for any running operations or file preallocations to finish
    (this could take a moment), close all open connections, flush all data to disk,
    and halt.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当 *mongod* 收到 SIGINT 或 SIGTERM 时，它将进行干净的关闭。这意味着它将等待任何运行中的操作或文件预分配完成（这可能需要一些时间），关闭所有打开的连接，将所有数据刷新到磁盘并停止。
- en: Security
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全性
- en: Do not set up publicly addressable MongoDB servers. You should restrict access
    as tightly as possible between the outside world and MongoDB. The best way to
    do this is to set up firewalls and only allow MongoDB to be reachable on internal
    network addresses. [Chapter 24](ch24.xhtml#chapter-ops) covers what connections
    it’s necessary to allow between MongoDB servers and clients.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 不要设置公开可访问的MongoDB服务器。你应该尽可能严格地限制外部世界与MongoDB之间的访问。最好的方法是设置防火墙，并只允许MongoDB在内部网络地址上可达。[第24章](ch24.xhtml#chapter-ops)涵盖了MongoDB服务器和客户端之间必须允许的连接。
- en: 'Beyond firewalls, there are a few options you can add to your config file to
    make it more secure:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了防火墙外，你可以向配置文件添加几个选项来增强其安全性：
- en: '`--bind_ip`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`--bind_ip`'
- en: 'Specify the interfaces that you want MongoDB to listen on. Generally you want
    this to be an internal IP: something application servers and other members of
    your cluster can access but that is inaccessible to the outside world. *localhost*
    is fine for *mongos* processes if you’re running the application server on the
    same machine. For config servers and shards, they’ll need to be addressable from
    other machines, so stick with non-*localhost* addresses.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 指定你希望MongoDB监听的接口。通常你希望这是一个内部IP：应用服务器和集群的其他成员可以访问的IP，但对外界不可访问。如果在同一台机器上运行应用服务器，对*mongos*进程来说*localhost*是可以的。对于配置服务器和分片，它们需要从其他机器可寻址，因此应使用非*localhost*地址。
- en: Starting in MongoDB 3.6, *mongod* and *mongos* processes bind to *localhost*
    by default. When bound only to *localhost*, *mongod* and *mongos* will only accept
    connections from clients running on the same machine. This helps limit the exposure
    of unsecured MongoDB instances. To bind to other addresses, use the `net.bindIp`
    configuration file setting or the `--bind_ip` command-line option to specify a
    list of hostnames or IP addresses.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从MongoDB 3.6开始，默认情况下*mongod*和*mongos*进程绑定到*localhost*。当仅绑定到*localhost*时，*mongod*和*mongos*只接受来自同一台机器上运行的客户端的连接。这有助于限制未安全配置的MongoDB实例的暴露。要绑定到其他地址，请使用`net.bindIp`配置文件设置或`--bind_ip`命令行选项来指定主机名或IP地址列表。
- en: '`--nounixsocket`'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`--nounixsocket`'
- en: 'Disable listening on the UNIX domain socket. If you’re not planning to connect
    via filesystem socket, you might as well disallow it. You would only connect via
    filesystem socket on a machine that is also running an application server: you
    must be local to use a filesystem socket.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用在UNIX域套接字上的监听。如果你不计划通过文件系统套接字连接，最好禁止它。你只会在同时运行应用服务器的机器上通过文件系统套接字进行连接：必须是本地才能使用文件系统套接字。
- en: '`--noscripting`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`--noscripting`'
- en: Disable server-side JavaScript execution. Some security issues that have been
    reported with MongoDB have been JavaScript-related, so it’s generally safer to
    disallow it, if your application allows.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用服务器端JavaScript执行。有些与MongoDB报告的安全问题与JavaScript有关，因此如果你的应用允许的话，通常最安全的做法是禁用它。
- en: Note
  id: totrans-57
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Several shell helpers assume that JavaScript is available on the server, notably
    `sh.status()`. You will see errors if you attempt to run any of these helpers
    with JavaScript disabled.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一些shell辅助程序假设服务器上有JavaScript可用，特别是`sh.status()`。如果尝试在禁用JavaScript的情况下运行任何这些辅助程序，你会看到错误。
- en: Data Encryption
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据加密
- en: Data encryption is available in MongoDB Enterprise. These options are not supported
    in the Community version of MongoDB.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Enterprise支持数据加密。这些选项在MongoDB社区版本中不受支持。
- en: 'The data encryption process includes the following steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 数据加密过程包括以下步骤：
- en: Generate a master key.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成主密钥。
- en: Generate keys for each database.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个数据库生成密钥。
- en: Encrypt data with the database keys.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据库密钥加密数据。
- en: Encrypt the database keys with the master key.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用主密钥加密数据库密钥。
- en: 'When using data encryption, all data files are encrypted in the filesystem.
    Data is only unencrypted in memory and during transmission. To encrypt all of
    MongoDB’s network traffic, you can use TLS/SSL. The data encryption options that
    MongoDB Enterprise users can add to their config files are:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用数据加密时，所有数据文件在文件系统中都是加密的。数据只在内存和传输过程中解密。要加密MongoDB的所有网络流量，你可以使用TLS/SSL。MongoDB
    Enterprise用户可以向其配置文件中添加的数据加密选项有：
- en: '`--enableEncryption`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`--enableEncryption`'
- en: Enables encryption in the WiredTiger storage engine. With this option, data
    stored in memory and on disk will be encrypted. This is sometimes referred to
    as “encryption at rest.” You must set this to `true` in order to pass in encryption
    keys and to configure encryption. This option is `false` by default.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 启用WiredTiger存储引擎中的加密。使用此选项，存储在内存和磁盘上的数据将被加密。有时也称为“静态加密”。您必须将其设置为`true`以传递加密密钥并配置加密。此选项默认为`false`。
- en: '`--encryptionCipherMode`'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`--encryptionCipherMode`'
- en: 'Set the cipher mode for encryption at rest in WiredTiger. There are two modes
    available: AES256-CBC and AES256-GCM. AES256-CBC is an acronym for 256-bit Advanced
    Encryption Standard in Cipher Block Chaining Mode. AES256-GCM uses Galois/Counter
    Mode. Both are standard encryption ciphers. As of MongoDB 4.0, MongoDB Enterprise
    on Windows no longer supports AES256-GCM.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在WiredTiger中设置数据加密的密码模式。有两种可用模式：AES256-CBC和AES256-GCM。AES256-CBC是256位高级加密标准的密码分组链接模式的缩写。AES256-GCM使用Galois/Counter模式。两者都是标准的加密算法。从MongoDB
    4.0开始，在Windows上的MongoDB企业版不再支持AES256-GCM。
- en: '`--encryptionKeyFile`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`--encryptionKeyFile`'
- en: Specify the path to the local keyfile if you are managing keys using a process
    other than the Key Management Interoperability Protocol (KMIP).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用与密钥管理互操作性协议（KMIP）不同的过程管理密钥，则需指定本地密钥文件的路径。
- en: MongoDB Enterprise also supports key management using KMIP. A discussion of
    KMIP is beyond the scope of this book. Please see the [MongoDB documentation for
    details on using KMIP with MongoDB](https://oreil.ly/TeA4t).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB企业版还支持使用KMIP进行密钥管理。本书不涵盖KMIP的讨论。请参阅[使用MongoDB的KMIP的详细文档](https://oreil.ly/TeA4t)。
- en: SSL Connections
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SSL连接
- en: As we saw in [Chapter 18](ch18.xhtml#chapter-seeing), MongoDB supports transport
    encryption using TLS/SSL. This feature is available in all editions of MongoDB.
    By default, connections to MongoDB transfer data unencrypted. However, TLS/SSL
    ensures transport encryption. MongoDB uses native TSL/SSL libraries available
    on your operating system. Use the option `--tlsMode` and related options to configure
    TLS/SSL. Refer to [Chapter 18](ch18.xhtml#chapter-seeing) for more detail, and
    consult your driver’s documentation on how to create TLS/SSL connections using
    your language.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第18章](ch18.xhtml#chapter-seeing)中所见，MongoDB支持使用TLS/SSL进行传输加密。此功能在MongoDB的所有版本中均可用。默认情况下，连接到MongoDB的数据是未加密的。但TLS/SSL确保传输加密。MongoDB使用操作系统上可用的本机TLS/SSL库。使用`--tlsMode`选项及相关选项配置TLS/SSL。有关更多详细信息，请参阅[第18章](ch18.xhtml#chapter-seeing)，并查阅您的驱动程序文档，了解如何使用您的语言创建TLS/SSL连接。
- en: Logging
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志记录
- en: By default, *mongod* sends its logs to stdout. Most init scripts use the `--logpath`
    option to send logs to a file. If you have multiple MongoDB instances on a single
    machine (say, a *mongod* and a *mongos*), make sure that their logs are stored
    in separate files. Be sure that you know where the logs are and have read access
    to the files.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，*mongod*将其日志发送到stdout。大多数初始化脚本使用`--logpath`选项将日志发送到文件中。如果在单台机器上有多个MongoDB实例（例如，一个*mongod*和一个*mongos*），请确保它们的日志存储在单独的文件中。确保您知道日志的存储位置并具有文件的读取权限。
- en: 'MongoDB spits out a lot of log messages, but please do not run with the `--quiet`
    option (which suppresses some of them). Leaving the log level at the default is
    usually perfect: there is enough information for basic debugging (why is this
    slow, why isn’t this starting up, etc.), but the logs do not take up too much
    space.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB会生成大量的日志消息，但请不要使用`--quiet`选项（该选项会抑制部分日志消息）。通常情况下保持默认的日志级别是最佳选择：提供了足够的基本调试信息（比如为什么运行慢，为什么启动失败等），但日志占用的空间不会过多。
- en: If you are debugging a specific issue with your application, there are a couple
    of options for getting more information from the logs. You can change the log
    level by running the `setParameter` command, or by setting the log level at startup
    time by passing it as a string using the `--setParameter` option.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在调试应用程序的特定问题，有几种选项可以从日志中获取更多信息。您可以通过运行`setParameter`命令或通过将其作为字符串传递使用`--setParameter`选项在启动时设置日志级别。
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can also change the log level for a particular component. This is helpful
    if you are debugging a specific aspect of your application and require more information,
    but only from that component. In this example, we set the default log verbosity
    to 1 and the query component verbosity to 2:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为特定组件更改日志级别。如果您正在调试应用程序的特定方面并需要更多信息，但只来自该组件，则这很有帮助。在此示例中，我们将默认日志详细级别设置为1，查询组件的详细级别设置为2：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Remember to turn the log level back down to 0 when you’re done debugging, or
    your logs may be needlessly noisy. You can turn the level all the way up to 5,
    at which point `mongod` will print out almost every action it takes, including
    the contents of every request handled. This can cause a lot of I/O as *mongod*
    writes everything to the log file, which can slow down a busy system. Turning
    on profiling is a better option if you need to see every operation as it’s happening.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在调试完成后将日志级别调回到 0，否则你的日志可能会变得不必要地嘈杂。你可以将级别调到 5，此时 `mongod` 将打印出它执行的几乎每个操作，包括处理的每个请求的内容。这可能会导致大量的
    I/O，因为 *mongod* 将所有内容写入日志文件，这会减慢繁忙系统的速度。如果需要查看每个操作的实时发生情况，打开分析是一个更好的选择。
- en: 'By default, MongoDB logs information about queries that take longer than 100
    ms to run. If 100 ms is too short or too long for your application, you can change
    the threshold with `setProfilingLevel`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，MongoDB 记录超过 100 毫秒的查询信息。如果 100 毫秒对于你的应用程序来说太短或太长，可以使用 `setProfilingLevel`
    更改阈值：
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The second line will turn off profiling, but the value in milliseconds given
    in the first line will continue to be used as a threshold for the log (across
    all databases). You can also set this parameter by restarting MongoDB with the
    `--slowms` option.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行将关闭分析，但第一行中给出的毫秒值将继续作为日志的阈值（跨所有数据库）。你也可以通过使用 `--slowms` 选项重新启动 MongoDB 来设置此参数。
- en: 'Finally, set up a cron job that rotates your log every day or week. If MongoDB
    was started with `--logpath`, sending the process a SIGUSR1 signal will make it
    rotate the log. There is also a `logRotate` command that does the same thing:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，设置一个 cron 作业，每天或每周轮换一次日志。如果 MongoDB 是通过 `--logpath` 启动的，向该进程发送 SIGUSR1 信号将使其轮换日志。还有一个
    `logRotate` 命令可以做同样的事情：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You cannot rotate logs if MongoDB was not started with `--logpath`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 MongoDB 没有通过 `--logpath` 启动，则无法轮换日志。
